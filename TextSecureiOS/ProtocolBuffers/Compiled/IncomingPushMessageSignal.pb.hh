// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IncomingPushMessageSignal.proto

#ifndef PROTOBUF_IncomingPushMessageSignal_2eproto__INCLUDED
#define PROTOBUF_IncomingPushMessageSignal_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace textsecure {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_IncomingPushMessageSignal_2eproto();
void protobuf_AssignDesc_IncomingPushMessageSignal_2eproto();
void protobuf_ShutdownFile_IncomingPushMessageSignal_2eproto();

class IncomingPushMessageSignal;

enum IncomingPushMessageSignal_Type {
  IncomingPushMessageSignal_Type_UNKNOWN = 0,
  IncomingPushMessageSignal_Type_CIPHERTEXT = 1,
  IncomingPushMessageSignal_Type_KEY_EXCHANGE = 2,
  IncomingPushMessageSignal_Type_PREKEY_BUNDLE = 3,
  IncomingPushMessageSignal_Type_PLAINTEXT = 4
};
bool IncomingPushMessageSignal_Type_IsValid(int value);
const IncomingPushMessageSignal_Type IncomingPushMessageSignal_Type_Type_MIN = IncomingPushMessageSignal_Type_UNKNOWN;
const IncomingPushMessageSignal_Type IncomingPushMessageSignal_Type_Type_MAX = IncomingPushMessageSignal_Type_PLAINTEXT;
const int IncomingPushMessageSignal_Type_Type_ARRAYSIZE = IncomingPushMessageSignal_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* IncomingPushMessageSignal_Type_descriptor();
inline const ::std::string& IncomingPushMessageSignal_Type_Name(IncomingPushMessageSignal_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    IncomingPushMessageSignal_Type_descriptor(), value);
}
inline bool IncomingPushMessageSignal_Type_Parse(
    const ::std::string& name, IncomingPushMessageSignal_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IncomingPushMessageSignal_Type>(
    IncomingPushMessageSignal_Type_descriptor(), name, value);
}
// ===================================================================

class IncomingPushMessageSignal : public ::google::protobuf::Message {
 public:
  IncomingPushMessageSignal();
  virtual ~IncomingPushMessageSignal();

  IncomingPushMessageSignal(const IncomingPushMessageSignal& from);

  inline IncomingPushMessageSignal& operator=(const IncomingPushMessageSignal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IncomingPushMessageSignal& default_instance();

  void Swap(IncomingPushMessageSignal* other);

  // implements Message ----------------------------------------------

  IncomingPushMessageSignal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IncomingPushMessageSignal& from);
  void MergeFrom(const IncomingPushMessageSignal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IncomingPushMessageSignal_Type Type;
  static const Type UNKNOWN = IncomingPushMessageSignal_Type_UNKNOWN;
  static const Type CIPHERTEXT = IncomingPushMessageSignal_Type_CIPHERTEXT;
  static const Type KEY_EXCHANGE = IncomingPushMessageSignal_Type_KEY_EXCHANGE;
  static const Type PREKEY_BUNDLE = IncomingPushMessageSignal_Type_PREKEY_BUNDLE;
  static const Type PLAINTEXT = IncomingPushMessageSignal_Type_PLAINTEXT;
  static inline bool Type_IsValid(int value) {
    return IncomingPushMessageSignal_Type_IsValid(value);
  }
  static const Type Type_MIN =
    IncomingPushMessageSignal_Type_Type_MIN;
  static const Type Type_MAX =
    IncomingPushMessageSignal_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    IncomingPushMessageSignal_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return IncomingPushMessageSignal_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return IncomingPushMessageSignal_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return IncomingPushMessageSignal_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .textsecure.IncomingPushMessageSignal.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::textsecure::IncomingPushMessageSignal_Type type() const;
  inline void set_type(::textsecure::IncomingPushMessageSignal_Type value);

  // optional string source = 2;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 2;
  inline const ::std::string& source() const;
  inline void set_source(const ::std::string& value);
  inline void set_source(const char* value);
  inline void set_source(const char* value, size_t size);
  inline ::std::string* mutable_source();
  inline ::std::string* release_source();
  inline void set_allocated_source(::std::string* source);

  // optional uint32 sourceDevice = 7;
  inline bool has_sourcedevice() const;
  inline void clear_sourcedevice();
  static const int kSourceDeviceFieldNumber = 7;
  inline ::google::protobuf::uint32 sourcedevice() const;
  inline void set_sourcedevice(::google::protobuf::uint32 value);

  // optional string relay = 3;
  inline bool has_relay() const;
  inline void clear_relay();
  static const int kRelayFieldNumber = 3;
  inline const ::std::string& relay() const;
  inline void set_relay(const ::std::string& value);
  inline void set_relay(const char* value);
  inline void set_relay(const char* value, size_t size);
  inline ::std::string* mutable_relay();
  inline ::std::string* release_relay();
  inline void set_allocated_relay(::std::string* relay);

  // optional uint64 timestamp = 5;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // optional bytes message = 6;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 6;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const void* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:textsecure.IncomingPushMessageSignal)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_sourcedevice();
  inline void clear_has_sourcedevice();
  inline void set_has_relay();
  inline void clear_has_relay();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* source_;
  int type_;
  ::google::protobuf::uint32 sourcedevice_;
  ::std::string* relay_;
  ::google::protobuf::uint64 timestamp_;
  ::std::string* message_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_IncomingPushMessageSignal_2eproto();
  friend void protobuf_AssignDesc_IncomingPushMessageSignal_2eproto();
  friend void protobuf_ShutdownFile_IncomingPushMessageSignal_2eproto();

  void InitAsDefaultInstance();
  static IncomingPushMessageSignal* default_instance_;
};
// ===================================================================


// ===================================================================

// IncomingPushMessageSignal

// optional .textsecure.IncomingPushMessageSignal.Type type = 1;
inline bool IncomingPushMessageSignal::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IncomingPushMessageSignal::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IncomingPushMessageSignal::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IncomingPushMessageSignal::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::textsecure::IncomingPushMessageSignal_Type IncomingPushMessageSignal::type() const {
  return static_cast< ::textsecure::IncomingPushMessageSignal_Type >(type_);
}
inline void IncomingPushMessageSignal::set_type(::textsecure::IncomingPushMessageSignal_Type value) {
  assert(::textsecure::IncomingPushMessageSignal_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional string source = 2;
inline bool IncomingPushMessageSignal::has_source() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IncomingPushMessageSignal::set_has_source() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IncomingPushMessageSignal::clear_has_source() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IncomingPushMessageSignal::clear_source() {
  if (source_ != &::google::protobuf::internal::kEmptyString) {
    source_->clear();
  }
  clear_has_source();
}
inline const ::std::string& IncomingPushMessageSignal::source() const {
  return *source_;
}
inline void IncomingPushMessageSignal::set_source(const ::std::string& value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  source_->assign(value);
}
inline void IncomingPushMessageSignal::set_source(const char* value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  source_->assign(value);
}
inline void IncomingPushMessageSignal::set_source(const char* value, size_t size) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  source_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IncomingPushMessageSignal::mutable_source() {
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  return source_;
}
inline ::std::string* IncomingPushMessageSignal::release_source() {
  clear_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = source_;
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void IncomingPushMessageSignal::set_allocated_source(::std::string* source) {
  if (source_ != &::google::protobuf::internal::kEmptyString) {
    delete source_;
  }
  if (source) {
    set_has_source();
    source_ = source;
  } else {
    clear_has_source();
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 sourceDevice = 7;
inline bool IncomingPushMessageSignal::has_sourcedevice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IncomingPushMessageSignal::set_has_sourcedevice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IncomingPushMessageSignal::clear_has_sourcedevice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IncomingPushMessageSignal::clear_sourcedevice() {
  sourcedevice_ = 0u;
  clear_has_sourcedevice();
}
inline ::google::protobuf::uint32 IncomingPushMessageSignal::sourcedevice() const {
  return sourcedevice_;
}
inline void IncomingPushMessageSignal::set_sourcedevice(::google::protobuf::uint32 value) {
  set_has_sourcedevice();
  sourcedevice_ = value;
}

// optional string relay = 3;
inline bool IncomingPushMessageSignal::has_relay() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IncomingPushMessageSignal::set_has_relay() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IncomingPushMessageSignal::clear_has_relay() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IncomingPushMessageSignal::clear_relay() {
  if (relay_ != &::google::protobuf::internal::kEmptyString) {
    relay_->clear();
  }
  clear_has_relay();
}
inline const ::std::string& IncomingPushMessageSignal::relay() const {
  return *relay_;
}
inline void IncomingPushMessageSignal::set_relay(const ::std::string& value) {
  set_has_relay();
  if (relay_ == &::google::protobuf::internal::kEmptyString) {
    relay_ = new ::std::string;
  }
  relay_->assign(value);
}
inline void IncomingPushMessageSignal::set_relay(const char* value) {
  set_has_relay();
  if (relay_ == &::google::protobuf::internal::kEmptyString) {
    relay_ = new ::std::string;
  }
  relay_->assign(value);
}
inline void IncomingPushMessageSignal::set_relay(const char* value, size_t size) {
  set_has_relay();
  if (relay_ == &::google::protobuf::internal::kEmptyString) {
    relay_ = new ::std::string;
  }
  relay_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IncomingPushMessageSignal::mutable_relay() {
  set_has_relay();
  if (relay_ == &::google::protobuf::internal::kEmptyString) {
    relay_ = new ::std::string;
  }
  return relay_;
}
inline ::std::string* IncomingPushMessageSignal::release_relay() {
  clear_has_relay();
  if (relay_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = relay_;
    relay_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void IncomingPushMessageSignal::set_allocated_relay(::std::string* relay) {
  if (relay_ != &::google::protobuf::internal::kEmptyString) {
    delete relay_;
  }
  if (relay) {
    set_has_relay();
    relay_ = relay;
  } else {
    clear_has_relay();
    relay_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 timestamp = 5;
inline bool IncomingPushMessageSignal::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IncomingPushMessageSignal::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IncomingPushMessageSignal::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IncomingPushMessageSignal::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 IncomingPushMessageSignal::timestamp() const {
  return timestamp_;
}
inline void IncomingPushMessageSignal::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional bytes message = 6;
inline bool IncomingPushMessageSignal::has_message() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IncomingPushMessageSignal::set_has_message() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IncomingPushMessageSignal::clear_has_message() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IncomingPushMessageSignal::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& IncomingPushMessageSignal::message() const {
  return *message_;
}
inline void IncomingPushMessageSignal::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void IncomingPushMessageSignal::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void IncomingPushMessageSignal::set_message(const void* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IncomingPushMessageSignal::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* IncomingPushMessageSignal::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void IncomingPushMessageSignal::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace textsecure

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::textsecure::IncomingPushMessageSignal_Type>() {
  return ::textsecure::IncomingPushMessageSignal_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IncomingPushMessageSignal_2eproto__INCLUDED
